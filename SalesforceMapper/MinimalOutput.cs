// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using SalesforceMapper.MinimalOutput;
//
//    var minimalOutput = MinimalOutput.FromJson(jsonString);

namespace SalesforceMapper.MinimalOutput
{
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class MinimalOutput
    {
        [JsonProperty("Preferences", Required = Required.Always)]
        public List<Preference> Preferences { get; set; }
    }

    public partial class Preference
    {
        [JsonProperty("PrefCode", Required = Required.Always)]
        public string PrefCode { get; set; }
    }

    public partial class MinimalOutput
    {
        public static MinimalOutput FromJson(string json) => JsonConvert.DeserializeObject<MinimalOutput>(json, SalesforceMapper.MinimalOutput.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this MinimalOutput self) => JsonConvert.SerializeObject(self, SalesforceMapper.MinimalOutput.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
