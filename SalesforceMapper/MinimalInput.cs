// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using SalesforceMapper.MinimalInput;
//
//    var minimalOutput = MinimalOutput.FromJson(jsonString);

namespace SalesforceMapper.MinimalInput;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

public partial class MinimalInput
{
    [JsonProperty("Id", Required = Required.Always)]
    public string Id { get; set; }

    [JsonProperty("ContactEmail__c", Required = Required.Always)]
    public string ContactEmailC { get; set; }
}

public partial class MinimalInput
{
    public static MinimalInput FromJson(string json) => JsonConvert.DeserializeObject<MinimalInput>(json, SalesforceMapper.MinimalInput.Converter.Settings);
}

public static class Serialize
{
    public static string ToJson(this MinimalInput self) => JsonConvert.SerializeObject(self, SalesforceMapper.MinimalInput.Converter.Settings);
}

internal static class Converter
{
    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    {
        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
        DateParseHandling = DateParseHandling.None,
        Converters =
        {
            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
        },
    };
}
